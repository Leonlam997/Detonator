package com.leon.detonator.serial;

public class SerialCommand {
    public final static byte INITIAL_FINISHED = (byte) 0xBB;
    public final static byte INITIAL_FAIL = (byte) 0xCC;
    public final static String RESPOND_EXPLODE = "Explode!";
    public final static String RESPOND_CHARGE = "Charge!";
    public final static String RESPOND_CHARGE_FINISHED = "Done!";
    public final static byte ALERT_SHORT_CIRCUIT = (byte) 0xAA;
    public final static byte ALERT_LARGE_CURRENT = (byte) 0xAB;
    public final static byte ALERT_BREAK_CIRCUIT = (byte) 0xAC;
    public final static int CODE_CHAR_AT = 3;
    public final static byte DATA_PREFIX = (byte) 0xC5;
    public final static byte DATA_SUFFIX = (byte) 0xE5;
    public final static byte CODE_WRITE_FIELD = (byte) 0xD5;
    public final static byte CODE_READ_FIELD = (byte) 0xCB;
    public final static byte CODE_READ_SHELL = (byte) 0xD3;
    public final static byte CODE_READ_PARAM = (byte) 0xE3;
    public final static byte CODE_BRIDGE_RESISTANCE = (byte) 0xD6;
    public final static byte CODE_CAPACITOR = (byte) 0x47;
    public final static byte CODE_SINGLE_CHARGE = (byte) 0x1C;
    public final static byte CODE_CLEAR_READ_STATUS = (byte) 0x6D;
    public final static byte CODE_INITIAL = (byte) 0x4E;
    public final static byte CODE_EXPLODE = (byte) 0x79;
    public final static byte CODE_RESET = (byte) 0x4D;
    public final static byte CODE_POLARITY = (byte) 0x55;
    public final static byte CODE_SCAN_UID = (byte) 0xEA;
    public final static byte CODE_DELAY = (byte) 0x65;
    public final static byte CODE_CHECK_ONLINE = (byte) 0xCD;
    public final static byte CODE_CHECK_STATUS = (byte) 0xDA;
    public final static byte CODE_CHECK_PSW = (byte) 0xCE;
    public final static byte CODE_GET_ALL_STATUS = (byte) 0xE6;
    public final static byte CODE_CHARGE = (byte) 0x0F;
    public final static byte CODE_CHECK_CONFIG = (byte) 0xF4;
    public final static byte CODE_LOCK = (byte) 0x76;
    public final static byte CODE_WRITE_UID = (byte) 0x72;
    public final static byte CODE_WRITE_PSW = (byte) 0x71;
    public final static byte CODE_WRITE_SHELL = (byte) 0x6C;
    public final static byte CODE_SINGLE_WRITE_CONFIG = (byte) 0x69;
    public final static byte CODE_SINGLE_READ_CONFIG = (byte) 0x5A;
    public final static byte CODE_SINGLE_WRITE_FIELD = (byte) 0x6A;
    public final static byte CODE_SINGLE_WRITE_PARAM = (byte) 0x74;
    public final static byte CODE_SINGLE_READ_PARAM = (byte) 0x59;
    public final static byte CODE_SINGLE_SHELL = (byte) 0x53;
    public final static byte CODE_WRITE_CLOCK = (byte) 0x38;
    public final static byte CODE_SINGLE_BRIDGE_RESISTANCE = (byte) 0x56;
    public final static byte CODE_SINGLE_CAPACITOR = (byte) 0x63;
    public final static byte CODE_BUS_CONTROL = (byte) 0x33;
    public final static byte CODE_MEASURE_VALUE = (byte) 0x2A;
    public final static byte CODE_SET_POLARITY = (byte) 0x05;
    public final static byte CODE_VERSION = (byte) 0x14;
    public final static byte CODE_SET_PARAM_LEVEL = (byte) 0x0C;
    public final static byte CODE_RESEND = (byte) 0xFF;
    public final static byte CODE_ERROR = (byte) 0xFF;
    public final static byte CODE_SCAN_CODE = (byte) 0x27;
    public final static int MEASURE_CURRENT = 0x11;
    public final static int MEASURE_VOLTAGE = 0x00;
    public final static int MEASURE_CURRENT_LOW = 0x44;
    public final static int MEASURE_CURRENT_HIGH = 0x55;
    public final static int MASK_STATUS_LOCK = 1 << 7;
    public final static int MASK_STATUS_PSW = 1 << 5;
    public final static int MASK_STATUS_CHARGE_FULL = 1 << 4;
    public final static int MASK_STATUS_DELAY_FLAG = 1 << 3;
}
